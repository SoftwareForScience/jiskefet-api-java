/*
 * Jiskefet
 * Running with /api prefix
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateLogDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-08T11:03:08.533Z")
public class CreateLogDto {
  /**
   * What kind of log is it?
   */
  @JsonAdapter(SubtypeEnum.Adapter.class)
  public enum SubtypeEnum {
    RUN("run"),
    
    SUBSYSTEM("subsystem"),
    
    ANNOUNCEMENT("announcement"),
    
    INTERVENTION("intervention"),
    
    COMMENT("comment");

    private String value;

    SubtypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SubtypeEnum fromValue(String text) {
      for (SubtypeEnum b : SubtypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SubtypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubtypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubtypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SubtypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("subtype")
  private SubtypeEnum subtype = null;

  /**
   * Where did the log come from?
   */
  @JsonAdapter(OriginEnum.Adapter.class)
  public enum OriginEnum {
    HUMAN("human"),
    
    PROCESS("process");

    private String value;

    OriginEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OriginEnum fromValue(String text) {
      for (OriginEnum b : OriginEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OriginEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OriginEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OriginEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OriginEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("origin")
  private OriginEnum origin = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("attachments")
  private List<String> attachments = new ArrayList<String>();

  @SerializedName("runs")
  private List<String> runs = new ArrayList<String>();

  public CreateLogDto subtype(SubtypeEnum subtype) {
    this.subtype = subtype;
    return this;
  }

   /**
   * What kind of log is it?
   * @return subtype
  **/
  @ApiModelProperty(example = "run", required = true, value = "What kind of log is it?")
  public SubtypeEnum getSubtype() {
    return subtype;
  }

  public void setSubtype(SubtypeEnum subtype) {
    this.subtype = subtype;
  }

  public CreateLogDto origin(OriginEnum origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Where did the log come from?
   * @return origin
  **/
  @ApiModelProperty(example = "human", required = true, value = "Where did the log come from?")
  public OriginEnum getOrigin() {
    return origin;
  }

  public void setOrigin(OriginEnum origin) {
    this.origin = origin;
  }

  public CreateLogDto title(String title) {
    this.title = title;
    return this;
  }

   /**
   * describes the log in short
   * @return title
  **/
  @ApiModelProperty(example = "log for run 12", required = true, value = "describes the log in short")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CreateLogDto text(String text) {
    this.text = text;
    return this;
  }

   /**
   * describes the log in depth
   * @return text
  **/
  @ApiModelProperty(example = "lorum ipsum", required = true, value = "describes the log in depth")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public CreateLogDto attachments(List<String> attachments) {
    this.attachments = attachments;
    return this;
  }

  public CreateLogDto addAttachmentsItem(String attachmentsItem) {
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Attachments of this log
   * @return attachments
  **/
  @ApiModelProperty(example = "[]", required = true, value = "Attachments of this log")
  public List<String> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<String> attachments) {
    this.attachments = attachments;
  }

  public CreateLogDto runs(List<String> runs) {
    this.runs = runs;
    return this;
  }

  public CreateLogDto addRunsItem(String runsItem) {
    this.runs.add(runsItem);
    return this;
  }

   /**
   * Attached run numbers of this log
   * @return runs
  **/
  @ApiModelProperty(example = "\"8\"", required = true, value = "Attached run numbers of this log")
  public List<String> getRuns() {
    return runs;
  }

  public void setRuns(List<String> runs) {
    this.runs = runs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLogDto createLogDto = (CreateLogDto) o;
    return Objects.equals(this.subtype, createLogDto.subtype) &&
        Objects.equals(this.origin, createLogDto.origin) &&
        Objects.equals(this.title, createLogDto.title) &&
        Objects.equals(this.text, createLogDto.text) &&
        Objects.equals(this.attachments, createLogDto.attachments) &&
        Objects.equals(this.runs, createLogDto.runs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subtype, origin, title, text, attachments, runs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLogDto {\n");
    
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    runs: ").append(toIndentedString(runs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

